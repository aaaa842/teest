"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src_three_ThreeScene_js"],{

/***/ "./src/three/ThreeScene.js":
/*!*********************************!*\
  !*** ./src/three/ThreeScene.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ThreeScene; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction ThreeScene(param) {\n    let { data, width = 1380, height = 850 } = param;\n    _s();\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let THREE;\n        let renderer, scene, camera, controls;\n        let animationId;\n        async function setup() {\n            // dynamic import so it only runs in client\n            THREE = await __webpack_require__.e(/*! import() */ \"node_modules_three_build_three_module_js\").then(__webpack_require__.bind(__webpack_require__, /*! three */ \"./node_modules/three/build/three.module.js\"));\n            const { OrbitControls } = await __webpack_require__.e(/*! import() */ \"node_modules_three_examples_jsm_controls_OrbitControls_js\").then(__webpack_require__.bind(__webpack_require__, /*! three/examples/jsm/controls/OrbitControls */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\"));\n            renderer = new THREE.WebGLRenderer({\n                antialias: true,\n                alpha: true\n            });\n            renderer.setSize(width, height);\n            renderer.setPixelRatio(window.devicePixelRatio || 1);\n            scene = new THREE.Scene();\n            scene.background = new THREE.Color(0x081226);\n            camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 5000);\n            camera.position.set(0, 400, 800);\n            controls = new OrbitControls(camera, renderer.domElement);\n            controls.enableDamping = true;\n            controls.dampingFactor = 0.07;\n            controls.minDistance = 200;\n            controls.maxDistance = 2000;\n            // lights\n            const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 0.6);\n            hemi.position.set(0, 200, 0);\n            scene.add(hemi);\n            const dir = new THREE.DirectionalLight(0xffffff, 0.8);\n            dir.position.set(100, 200, 100);\n            scene.add(dir);\n            // ground plane\n            const ground = new THREE.Mesh(new THREE.PlaneGeometry(2000, 2000), new THREE.MeshStandardMaterial({\n                color: 0x071026\n            }));\n            ground.rotation.x = -Math.PI / 2;\n            ground.position.y = -1;\n            scene.add(ground);\n            // create bars from data (if available)\n            const group = new THREE.Group();\n            scene.add(group);\n            // tooltip DOM\n            const tooltip = document.createElement(\"div\");\n            tooltip.style.position = \"absolute\";\n            tooltip.style.pointerEvents = \"none\";\n            tooltip.style.padding = \"8px 10px\";\n            tooltip.style.borderRadius = \"6px\";\n            tooltip.style.background = \"rgba(0,0,0,0.6)\";\n            tooltip.style.color = \"#fff\";\n            tooltip.style.fontSize = \"13px\";\n            tooltip.style.display = \"none\";\n            tooltip.style.zIndex = 9999;\n            document.body.appendChild(tooltip);\n            let hovered = null;\n            const raycaster = new THREE.Raycaster();\n            const mouse = new THREE.Vector2();\n            function buildFromData(d) {\n                // clear group\n                while(group.children.length)group.remove(group.children[0]);\n                if (!d || !d.length) return;\n                // expect columns: site, value (numeric). Normalize keys\n                const rows = d.map((r)=>{\n                    const keys = Object.keys(r);\n                    const site = r[\"site\"] || r[\"Site\"] || r[\"الموقع\"] || r[keys[0]];\n                    const rawVal = r[\"value\"] || r[\"Value\"] || r[\"النسبة\"] || r[\"النسبة (%)\"] || r[keys[1]] || r[keys.find((k)=>/percent|%|value|نسبة|عدد/i.test(k))];\n                    const val = parseFloat(String(rawVal || \"\").replace(\"%\", \"\").replace(\",\", \".\")) || 0;\n                    return {\n                        site,\n                        val\n                    };\n                });\n                // layout grid\n                const cols = Math.max(1, Math.ceil(Math.sqrt(rows.length)));\n                const spacing = 60;\n                rows.forEach((row, i)=>{\n                    const col = i % cols;\n                    const r = Math.floor(i / cols);\n                    const x = (col - cols / 2) * spacing;\n                    const z = (r - cols / 2) * spacing;\n                    const height = Math.max(2, row.val * 6);\n                    const geo = new THREE.BoxGeometry(40, height, 40);\n                    const mat = new THREE.MeshStandardMaterial({\n                        color: row.val >= 50 ? 0x16a34a : 0x4f8cff,\n                        metalness: 0.2,\n                        roughness: 0.6\n                    });\n                    const m = new THREE.Mesh(geo, mat);\n                    m.position.set(x, height / 2, z);\n                    m.userData = {\n                        site: row.site,\n                        val: row.val\n                    };\n                    group.add(m);\n                });\n            }\n            function onPointerMove(e) {\n                const rect = renderer.domElement.getBoundingClientRect();\n                const x = (e.clientX - rect.left) / rect.width * 2 - 1;\n                const y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\n                mouse.set(x, y);\n                raycaster.setFromCamera(mouse, camera);\n                const intersects = raycaster.intersectObjects(group.children, false);\n                if (intersects.length) {\n                    const hit = intersects[0].object;\n                    if (hovered !== hit) {\n                        if (hovered) hovered.material.emissive && hovered.material.emissive.setHex(0x000000);\n                        hovered = hit;\n                        if (hovered.material.emissive) hovered.material.emissive.setHex(0x222222);\n                    }\n                    tooltip.style.display = \"block\";\n                    tooltip.style.left = e.clientX + 12 + \"px\";\n                    tooltip.style.top = e.clientY + 12 + \"px\";\n                    tooltip.innerText = \"\".concat(hit.userData.site || \"—\", \": \").concat(hit.userData.val);\n                } else {\n                    if (hovered) hovered.material.emissive && hovered.material.emissive.setHex(0x000000);\n                    hovered = null;\n                    tooltip.style.display = \"none\";\n                }\n            }\n            renderer.domElement.addEventListener(\"pointermove\", onPointerMove);\n            // initial build\n            buildFromData(data);\n            // animate\n            function animate() {\n                controls.update();\n                renderer.render(scene, camera);\n                animationId = requestAnimationFrame(animate);\n            }\n            // attach\n            mountRef.current.appendChild(renderer.domElement);\n            animate();\n            // handle resize\n            function onResize() {\n                const w = width;\n                const h = height;\n                renderer.setSize(w, h);\n                camera.aspect = w / h;\n                camera.updateProjectionMatrix();\n            }\n            window.addEventListener(\"resize\", onResize);\n            // expose buildFromData for updates\n            mountRef.current._updateData = buildFromData;\n        }\n        setup();\n        return ()=>{\n            cancelAnimationFrame(animationId);\n            try {\n                if (mountRef.current && mountRef.current.firstChild) mountRef.current.removeChild(mountRef.current.firstChild);\n            } catch (e) {}\n            window.removeEventListener(\"resize\", ()=>{});\n        };\n    }, []);\n    // update when data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (mountRef.current && mountRef.current._updateData) {\n            mountRef.current._updateData(data);\n        }\n    }, [\n        data\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: mountRef,\n        style: {\n            width,\n            height\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Ahmed El-Sawy\\\\test_Oliver\\\\teest\\\\src\\\\three\\\\ThreeScene.js\",\n        lineNumber: 177,\n        columnNumber: 10\n    }, this);\n}\n_s(ThreeScene, \"F31R4KojS3GBmgP08zZIju4WW6M=\");\n_c = ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/three/ThreeScene.js\n"));

/***/ })

}]);